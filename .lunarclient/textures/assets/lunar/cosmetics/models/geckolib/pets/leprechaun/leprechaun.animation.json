{
	"format_version": "1.8.0",
	"animations": {
		"main": {
			"loop": true,
			"bones": {
				"pet_root": {
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"cauldron": {
					"scale": {
						"vector": [0, 0, 0]
					}
				},
				"leprechaun": {
					"position": {
						"vector": [0, -3.8, 0]
					},
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"rightLeg": {
					"rotation": {
						"vector": [
							"v.val = math.sin(q.life_time * 128 + 32) * 10 - 10;v.coef = 2;v.range = 0.5;v.out = (v.range * 2) / (1 + math.pow(v.coef, -v.val)) - v.range;(v.out + 0.5) * -12.25 -90;",
							22.5,
							0
						]
					},
					"position": {
						"vector": [
							-1,
							"v.val = math.sin(q.life_time * 128 + 32) * 10 - 10;v.coef = 2;v.range = 0.5;v.out = (v.range * 2) / (1 + math.pow(v.coef, -v.val)) - v.range;v.out + 0.5 + 2;",
							-2
						]
					}
				},
				"leftLeg": {
					"rotation": {
						"vector": [
							"v.val = math.sin(q.life_time * 128) * 10 - 10;v.coef = 2;v.range = 0.5;v.out = (v.range * 2) / (1 + math.pow(v.coef, -v.val)) - v.range;(v.out + 0.5) * -12.25 -90;",
							-22.5,
							0
						]
					},
					"position": {
						"vector": [
							1,
							"v.val = math.sin(q.life_time * 128) * 10 - 10;v.coef = 2;v.range = 0.5;v.out = (v.range * 2) / (1 + math.pow(v.coef, -v.val)) - v.range;v.out + 0.5 + 2;",
							-2
						]
					}
				},
				"body": {
					"rotation": {
						"vector": ["-5 + (math.clamp(-c.local_z_velocity_smoothed, -10, 10) * 2)", 0, 0]
					},
					"scale": {
						"vector": [
							"1 + math.clamp(c.local_y_velocity_smoothed, -10, 10) * 0.01+ math.sin(q.life_time * 128) * 0.01",
							"1 + -math.clamp(c.local_y_velocity_smoothed, -10, 10) * 0.01+ math.sin(q.life_time * 128) * 0.01",
							"1 + math.clamp(c.local_y_velocity_smoothed, -10, 10) * 0.01- math.sin(q.life_time * 128) * 0.01"
						]
					}
				},
				"head": {
					"rotation": {
						"vector": ["math.clamp(-c.local_z_velocity_smoothed, -10, 10) + q.head_x_rotation * 0.5", "q.head_y_rotation * 0.5", 0]
					},
					"scale": {
						"vector": ["1 - math.sin(q.life_time * 128) * 0.01", "1 - math.sin(q.life_time * 128) * 0.01", "1 + math.sin(q.life_time * 128) * 0.01"]
					}
				},
				"hat": {
					"rotation": {
						"vector": ["-c.local_z_velocity_smoothed * 2", 0, 0]
					}
				},
				"rightFeet": {
					"rotation": {
						"vector": [0, 0, 0]
					}
				},
				"leftEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightArm": {
					"rotation": {
						"vector": [
							"c.highspeed? 180 - 22.5: c.local_z_velocity_smoothed * 10+ math.sin(q.life_time * 128) * 12.25",
							0,
							"c.highspeed? -45 + math.sin(q.life_time * 256) * 12.25: 6 - math.sin(q.life_time * 64) * 6"
						]
					}
				},
				"leftArm": {
					"rotation": {
						"vector": [
							"c.highspeed? 180 - 22.5: c.local_z_velocity_smoothed * 10+ math.sin(q.life_time * 128) * 12.25",
							0,
							"c.highspeed? 45 + math.sin(q.life_time * 256) * 12.25: 6 - math.sin(q.life_time * 64) * 6"
						]
					}
				}
			}
		},
		"sneaking": {
			"loop": true,
			"bones": {
				"pet_root": {
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"cauldron": {
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"leprechaun": {
					"scale": {
						"vector": ["0.6 / 2", "0.6 / 2", "0.6 / 2"]
					}
				},
				"head": {
					"rotation": {
						"vector": ["-22.5 + q.head_x_rotation * 0.5", "q.head_y_rotation * 0.5", 0]
					},
					"position": {
						"vector": [0, 3, 0]
					},
					"scale": {
						"vector": [
							"0.6 * 3 - (-c.local_y_velocity_smoothed * 0.02)",
							"0.6 * 3 + (-c.local_y_velocity_smoothed * 0.02)",
							"0.6 * 3 - (-c.local_y_velocity_smoothed * 0.02)"
						]
					}
				},
				"leftEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				}
			}
		},
		"swimming": {
			"loop": true,
			"bones": {
				"platform": {
					"scale": {
						"vector": [0, 0, 0]
					}
				},
				"pet_root": {
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"cauldron": {
					"scale": {
						"vector": [0, 0, 0]
					}
				},
				"leprechaun": {
					"rotation": {
						"vector": ["math.sin(q.life_time * 256) * 2", 0, 0]
					},
					"position": {
						"vector": [-5, "5 + math.cos(q.life_time * 256) * 2", 0]
					},
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"rightLeg": {
					"rotation": {
						"vector": [
							"math.cos(q.life_time * 2048) * math.clamp(math.sin(q.life_time * 256 + 64), 0, 1) * 12.25",
							0,
							"-math.sin(q.life_time * 256 + 64) * 22.5 + 22.5"
						]
					}
				},
				"rightFeet": {
					"rotation": {
						"vector": ["45 + math.sin(q.life_time * 2048) * math.clamp(math.sin(q.life_time * 256 + 64), 0, 1) * 12.25", 0, 0]
					}
				},
				"leftLeg": {
					"rotation": {
						"vector": [
							"math.cos(q.life_time * 2048) * math.clamp(math.sin(q.life_time * 256 + 64), 0, 1) * 12.25",
							0,
							"math.sin(q.life_time * 256 + 64) * 22.5 - 22.5"
						]
					}
				},
				"leftFeet": {
					"rotation": {
						"vector": ["45 + math.sin(q.life_time * 2048) * math.clamp(math.sin(q.life_time * 256 + 64), 0, 1) * 12.25", 0, 0]
					}
				},
				"head": {
					"rotation": {
						"vector": ["-67.5 - math.sin(q.life_time * 256) * 6", 0, 0]
					}
				},
				"leftEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightArm": {
					"rotation": {
						"vector": ["math.cos(q.life_time * 256) * 90 - 90", "-math.sin(q.life_time * 256) * 45 + 45", 0]
					}
				},
				"leftArm": {
					"rotation": {
						"vector": ["math.cos(q.life_time * 256) * 90 - 90", "math.sin(q.life_time * 256) * 45 - 45", 0]
					}
				}
			}
		},
		"flying": {
			"loop": true,
			"bones": {
				"pet_root": {
					"position": {
						"vector": [-7, 6, 0]
					},
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"cauldron": {
					"rotation": {
						"vector": [0, "q.life_time * 64 + c.distance_moved3d * 48", 0]
					},
					"position": {
						"vector": [0, 0, 0]
					},
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"leprechaun": {
					"scale": {
						"vector": ["0.6 / 2", "0.6 / 2", "0.6 / 2"]
					}
				},
				"head": {
					"rotation": {
						"vector": ["q.head_x_rotation * 0.5- math.abs(math.clamp(c.local_x_velocity_smoothed * 2, -22.5, 22.5))", "q.head_y_rotation * 0.75", 0]
					},
					"position": {
						"vector": [0, 5, 0]
					},
					"scale": {
						"vector": [
							"0.6 * 3 - (-c.local_y_velocity_smoothed * 0.02)",
							"0.6 * 3 + (-c.local_y_velocity_smoothed * 0.02)",
							"0.6 * 3 - (-c.local_y_velocity_smoothed * 0.02)"
						]
					}
				},
				"leftEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"platform": {
					"scale": {
						"vector": [0, 0, 0]
					}
				},
				"locked_rotation_pivot": {
					"rotation": {
						"vector": ["math.clamp(c.local_z_velocity_smoothed * 2, -22.5, 22.5)", 0, "math.clamp(-c.local_x_velocity_smoothed * 2, -22.5, 22.5)"]
					},
					"position": {
						"vector": ["c.local_x_velocity_smoothed", "-c.local_y_velocity_smoothed", "c.local_z_velocity_smoothed"]
					}
				}
			}
		},
		"elytra": {
			"loop": true,
			"bones": {
				"pet_root": {
					"position": {
						"vector": [-7, 6, 0]
					},
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"cauldron": {
					"rotation": {
						"vector": [0, "q.life_time * 64 + c.distance_moved3d * 48", 0]
					},
					"position": {
						"vector": [0, 0, 0]
					},
					"scale": {
						"vector": [0.6, 0.6, 0.6]
					}
				},
				"leprechaun": {
					"scale": {
						"vector": ["0.6 / 2", "0.6 / 2", "0.6 / 2"]
					}
				},
				"head": {
					"rotation": {
						"vector": ["q.head_x_rotation * 0.5- math.abs(math.clamp(c.local_x_velocity_smoothed * 2, -22.5, 22.5))", "q.head_y_rotation * 0.75", 0]
					},
					"position": {
						"vector": [0, 5, 0]
					},
					"scale": {
						"vector": [
							"0.6 * 3 - (-c.local_y_velocity_smoothed * 0.02)",
							"0.6 * 3 + (-c.local_y_velocity_smoothed * 0.02)",
							"0.6 * 3 - (-c.local_y_velocity_smoothed * 0.02)"
						]
					}
				},
				"leftEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"rightEye": {
					"scale": {
						"vector": [1, "math.clamp(math.sin(q.life_time * 64) * 100 + 100, 0.1, 1)", 1]
					}
				},
				"platform": {
					"scale": {
						"vector": [0, 0, 0]
					}
				},
				"locked_rotation_pivot": {
					"rotation": {
						"vector": ["-90 + math.clamp(c.local_z_velocity_smoothed * 2, -22.5, 22.5)", 0, "math.clamp(-c.local_x_velocity_smoothed * 2, -22.5, 22.5)"]
					},
					"position": {
						"vector": ["c.local_x_velocity_smoothed", "-c.local_y_velocity_smoothed", "c.local_z_velocity_smoothed"]
					}
				}
			}
		}
	},
	"geckolib_format_version": 2
}